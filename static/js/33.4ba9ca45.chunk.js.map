{"version":3,"file":"static/js/33.4ba9ca45.chunk.js","mappings":"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","sources":["api/api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","constans/imgUrl.js","components/Title/Title.styled.js","components/Title/Title.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '74bfe718a55ac7916c6e6ad87b15f944';\n\nexport async function fetchTrendyFilms() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFilmsByName(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmInformation(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmCredits(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmReviews(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  position: relative;\n  overflow: hidden;\n  border-radius: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 400px;\n`;\n\nexport const MovieInfo = styled.div`\n  background-color: rgba(49, 54, 73, 0.7);\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  position: absolute;\n  bottom: 0;\n  transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1);\n  transform: translateY(100%);\n  li:hover &,\n  li:focus & {\n    transform: translateY(0%);\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: 20px;\n\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-size: 15px;\n\n  text-align: center;\n`;\n\nexport const Rating = styled.p`\n  font-size: 15px;\n\n  text-align: center;\n\n  color: ${p => {\n    if (p.rating <= 3.5) {\n      return '#A5260A';\n    }\n    if (p.rating < 7) {\n      return '#FFDB8B';\n    }\n    if (p.rating < 10) {\n      return '#009B76';\n    }\n  }};\n`;\n","import { useState, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { fetchTrendyFilms } from 'api/api';\n\nimport { imgUrl } from 'constans/imgUrl';\nimport poster from '../../img/noPoster.jpeg';\n\nimport {\n  List,\n  MovieItem,\n  Poster,\n  MovieInfo,\n  MovieName,\n  ReleaseDate,\n  Rating,\n} from './MovieList.styled';\n\nexport const MovieList = ({ list }) => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const currentUrl = location.pathname === '/' ? 'movies/' : '';\n\n  async function createMovieList() {\n    const trendyMovies = await fetchTrendyFilms();\n\n    if (!trendyMovies) {\n      return;\n    }\n    setMovies(trendyMovies);\n  }\n\n  useEffect(() => {\n    if (list) {\n      // eslint-disable-next-line\n      setMovies(list);\n      return;\n    }\n    createMovieList();\n  }, [list]);\n\n  return (\n    <div>\n      <List>\n        {movies.map(\n          ({ id, poster_path, title, release_date, vote_average }) => (\n            <MovieItem key={id}>\n              <NavLink to={`${currentUrl}${id}`} state={{ from: location }}>\n                <Poster\n                  src={poster_path ? imgUrl + poster_path : poster}\n                  alt={title}\n                ></Poster>\n                <MovieInfo>\n                  <MovieName>{title}</MovieName>\n                  <ReleaseDate>{release_date}</ReleaseDate>\n                  <Rating rating={vote_average}>\n                    {vote_average.toFixed(1)} rating\n                  </Rating>\n                </MovieInfo>\n              </NavLink>\n            </MovieItem>\n          )\n        )}\n      </List>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n};\n","export const imgUrl = 'https://image.tmdb.org/t/p/w500';\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  text-shadow: #fff 1px 0 10px;\n  text-align: center;\n  font-weight: 600;\n  font-size: 35px;\n  margin-bottom: 40px;\n`;\n","import PropTypes from 'prop-types';\nimport { MainTitle } from './Title.styled';\n\nexport const Title = ({ text }) => <MainTitle>{text}</MainTitle>;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { Title } from 'components/Title/Title';\nimport { MovieList } from '../components/MovieList/MovieList';\n\nconst Home = () => {\n  return (\n    <main>\n      <Title text={'Trending today'} />\n      <MovieList />\n    </main>\n  );\n};\nexport default Home;\n"],"names":["axios","API_KEY","fetchTrendyFilms","response","data","results","console","error","fetchFilmsByName","query","getFilmInformation","filmId","getFilmCredits","cast","getFilmReviews","List","styled","MovieItem","Poster","MovieInfo","MovieName","ReleaseDate","Rating","p","rating","MovieList","list","useState","movies","setMovies","location","useLocation","currentUrl","pathname","trendyMovies","useEffect","createMovieList","map","id","poster_path","title","release_date","vote_average","to","state","from","src","imgUrl","poster","alt","toFixed","MainTitle","Title","text"],"sourceRoot":""}