{"version":3,"file":"static/js/924.8df8adaf.chunk.js","mappings":"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","sources":["api/api.js","constans/imgUrl.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '74bfe718a55ac7916c6e6ad87b15f944';\n\nexport async function fetchTrendyFilms() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFilmsByName(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmInformation(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmCredits(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmReviews(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export const imgUrl = 'https://image.tmdb.org/t/p/w500';\n","import { NavLink, Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const LinkBack = styled(Link)`\n  position: absolute;\n  left: 30px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 20px;\n\n  color: #4d4f57;\n\n  transition: color 300ms cubic-bezier(0.23, 1, 0.32, 1);\n\n  & svg {\n    stroke: #4d4f57;\n    margin-right: 5px;\n    width: 20px;\n    height: 20px;\n    transition: stroke 300ms cubic-bezier(0.23, 1, 0.32, 1);\n  }\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    svg {\n      stroke: #ffffff;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  display: grid;\n  grid-template-columns: auto 1fr;\n`;\n\nexport const ImageWrapp = styled.div`\n  width: 360px;\n  margin-right: 40px;\n`;\n\nexport const Poster = styled.img`\n  box-shadow: 11px 12px 46px -16px rgba(255, 255, 255, 0.78);\n  width: 100%;\n`;\n\nexport const MovieName = styled.h2`\n  font-weight: 600;\n  font-size: 35px;\n  margin-bottom: 20px;\n  text-shadow: #fff 1px 0 10px;\n`;\n\nexport const CategoryItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  &:last-child {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Category = styled.p`\n  color: #4d4f57;\n\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nexport const Description = styled.span`\n  font-weight: 400;\n  color: #313649;\n  color: ${p => {\n    if (p.rating < 3) {\n      return '#A5260A';\n    }\n    if (p.rating < 7) {\n      return '#FFDB8B';\n    }\n    if (p.rating < 10) {\n      return '#009B76';\n    }\n  }};\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-bottom: 15px;\n  font-weight: 600;\n  font-size: 25px;\n  border-bottom: 1px solid #4d4f57;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n`;\n\nexport const InfoItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 50px;\n  }\n`;\n\nexport const InfoLink = styled(NavLink)`\n  color: #4d4f57;\n\n  font-weight: 500;\n  font-size: 20px;\n\n  &.active {\n    text-shadow: #fff 1px 0 10px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #ffffff;\n    font-weight: 600;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\n\nimport { FiArrowLeftCircle } from 'react-icons/fi';\n\nimport { getFilmInformation } from 'api/api';\nimport { imgUrl } from 'constans/imgUrl';\nimport poster from '../../img/noPoster.jpeg';\nimport { Loader } from '../../components/Loader';\n\nimport {\n  LinkBack,\n  Wrapper,\n  ImageWrapp,\n  Poster,\n  MovieName,\n  CategoryItem,\n  Category,\n  Description,\n  InfoTitle,\n  InfoList,\n  InfoItem,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getFilmInformation(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n    runtime,\n    spoken_languages,\n  } = movie;\n\n  return (\n    <>\n      <LinkBack to={backLinkHref}>\n        <FiArrowLeftCircle />\n        Go Back\n      </LinkBack>\n      <Wrapper>\n        <ImageWrapp>\n          <Poster\n            src={poster_path ? imgUrl + poster_path : poster}\n            alt={title}\n          />\n        </ImageWrapp>\n        <div>\n          <MovieName>{original_title}</MovieName>\n          <ul>\n            <CategoryItem>\n              <Category>\n                User Score:{' '}\n                <Description rating={vote_average}>\n                  {vote_average.toFixed(1)}\n                </Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Release Date: <Description>{release_date}</Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Overview: <Description>{overview}</Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Genres:\n                {genres.map(({ name }) => (\n                  <Description key={name}> {name}</Description>\n                ))}\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Film duration: <Description>{runtime} min</Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Languages:\n                {spoken_languages.map(({ name }) => (\n                  <Description key={name}> {name}</Description>\n                ))}\n              </Category>\n            </CategoryItem>\n          </ul>\n          <InfoTitle>Additional information</InfoTitle>\n          <InfoList>\n            <InfoItem>\n              <InfoLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </InfoLink>\n            </InfoItem>\n            <InfoItem>\n              <InfoLink to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </InfoLink>\n            </InfoItem>\n          </InfoList>\n        </div>\n      </Wrapper>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrendyFilms","response","data","results","console","error","fetchFilmsByName","query","getFilmInformation","filmId","getFilmCredits","cast","getFilmReviews","imgUrl","LinkBack","styled","Link","Wrapper","ImageWrapp","Poster","MovieName","CategoryItem","Category","Description","p","rating","InfoTitle","InfoList","InfoItem","InfoLink","NavLink","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","then","poster_path","title","original_title","vote_average","release_date","overview","genres","runtime","spoken_languages","to","src","poster","alt","toFixed","map","name","Suspense","fallback","Loader"],"sourceRoot":""}